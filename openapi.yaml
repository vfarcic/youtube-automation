openapi: 3.1.0
info:
  title: YouTube Automation API
  description: |
    REST API for YouTube video automation system that manages video lifecycle from ideation to post-publication.
    
    This API provides comprehensive CRUD operations for video management across 8 distinct phases:
    - Phase 0: Published
    - Phase 1: Publish Pending
    - Phase 2: Edit Requested
    - Phase 3: Material Done
    - Phase 4: Started
    - Phase 5: Delayed
    - Phase 6: Sponsored Blocked
    - Phase 7: Ideas
    
    Each video progresses through phases with specific tasks and completion tracking.
  version: 1.0.0
  contact:
    name: Viktor Farcic
    url: https://github.com/vfarcic/youtube-automation
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT

servers:
  - url: http://localhost:8080
    description: Local development server
  - url: http://localhost:8080/api
    description: API base path

paths:
  /health:
    get:
      summary: Health check endpoint
      description: Returns the health status of the API server
      operationId: healthCheck
      tags:
        - Health
      responses:
        '200':
          description: Server is healthy
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "ok"
                  time:
                    type: string
                    format: date-time
                    example: "2025-05-27T00:00:00Z"

  /api/videos:
    post:
      summary: Create a new video
      description: Creates a new video with the specified name and category
      operationId: createVideo
      tags:
        - Videos
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateVideoRequest'
      responses:
        '201':
          description: Video created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateVideoResponse'
        '400':
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

    get:
      summary: Get videos by phase
      description: Retrieves videos in a specific phase, or all videos from all phases if no phase is specified
      operationId: getVideos
      tags:
        - Videos
      parameters:
        - name: phase
          in: query
          required: false
          description: The phase ID to filter videos by. If not provided, returns videos from all phases (0-7).
          schema:
            type: integer
            minimum: 0
            maximum: 7
            example: 7
      responses:
        '200':
          description: Videos retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetVideosResponse'
        '400':
          description: Invalid phase parameter
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /api/videos/phases:
    get:
      summary: Get video phase statistics
      description: Returns count of videos in each phase
      operationId: getVideoPhases
      tags:
        - Videos
      responses:
        '200':
          description: Phase statistics retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VideoPhasesResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /api/videos/list:
    get:
      summary: Get lightweight video list by phase
      description: |
        Retrieves a lightweight list of videos in a specific phase, or all videos from all phases if no phase is specified.
        Optimized for list views, returning only essential fields needed for video cards.
        
        Performance: ~200 bytes per video vs ~8.8KB for full video objects (97.5% reduction).
      operationId: getVideosList
      tags:
        - Videos
      parameters:
        - name: phase
          in: query
          required: false
          description: The phase ID to filter videos by. If not provided, returns videos from all phases (0-7).
          schema:
            type: integer
            minimum: 0
            maximum: 7
            example: 0
      responses:
        '200':
          description: Lightweight video list retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetVideosListResponse'
              example:
                videos:
                  - name: "awesome-kubernetes-tutorial"
                    category: "tutorials"
                    date: "2025-05-27T10:00"
                    title: "Kubernetes Tutorial: From Zero to Hero"
                    thumbnail: "material/k8s-tutorial/thumbnail.jpg"
                    status: "draft"
                    phase: 4
                    progress:
                      completed: 3
                      total: 9
                  - name: "docker-best-practices"
                    category: "devops"
                    date: "2025-05-30T14:00"
                    title: "Docker Best Practices for Production"
                    thumbnail: "material/docker-bp/thumbnail.jpg"
                    status: "published"
                    phase: 0
                    progress:
                      completed: 11
                      total: 11
        '400':
          description: Invalid phase parameter
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /api/videos/{videoName}:
    get:
      summary: Get a specific video
      description: Retrieves detailed information about a specific video
      operationId: getVideo
      tags:
        - Videos
      parameters:
        - name: videoName
          in: path
          required: true
          description: The name of the video
          schema:
            type: string
            example: "my-video"
        - name: category
          in: query
          required: true
          description: The category of the video
          schema:
            type: string
            example: "category-01"
      responses:
        '200':
          description: Video retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetVideoResponse'
        '400':
          description: Missing required parameters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Video not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

    put:
      summary: Update a video
      description: Updates an existing video with new data
      operationId: updateVideo
      tags:
        - Videos
      parameters:
        - name: videoName
          in: path
          required: true
          description: The name of the video to update
          schema:
            type: string
            example: "my-video"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateVideoRequest'
      responses:
        '200':
          description: Video updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetVideoResponse'
        '400':
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

    delete:
      summary: Delete a video
      description: Deletes a video and all associated files
      operationId: deleteVideo
      tags:
        - Videos
      parameters:
        - name: videoName
          in: path
          required: true
          description: The name of the video to delete
          schema:
            type: string
            example: "my-video"
        - name: category
          in: query
          required: true
          description: The category of the video
          schema:
            type: string
            example: "category-01"
      responses:
        '204':
          description: Video deleted successfully
        '400':
          description: Missing required parameters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /api/videos/{videoName}/move:
    post:
      summary: Move a video to a different category
      description: Moves a video and its files to a different directory/category
      operationId: moveVideo
      tags:
        - Videos
      parameters:
        - name: videoName
          in: path
          required: true
          description: The name of the video to move
          schema:
            type: string
            example: "my-video"
        - name: category
          in: query
          required: true
          description: The current category of the video
          schema:
            type: string
            example: "category-01"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MoveVideoRequest'
      responses:
        '200':
          description: Video moved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Video moved successfully"
        '400':
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /api/videos/{videoName}/initial-details:
    put:
      summary: Update video initial details phase
      description: Updates video fields specific to the initial details phase
      operationId: updateVideoInitialDetails
      tags:
        - Video Phases
      parameters:
        - name: videoName
          in: path
          required: true
          description: The name of the video
          schema:
            type: string
            example: "my-video"
        - name: category
          in: query
          required: true
          description: The category of the video
          schema:
            type: string
            example: "category-01"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PhaseUpdateRequest'
      responses:
        '200':
          description: Video initial details updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetVideoResponse'
        '400':
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /api/videos/{videoName}/work-progress:
    put:
      summary: Update video work progress phase
      description: Updates video fields specific to the work progress phase
      operationId: updateVideoWorkProgress
      tags:
        - Video Phases
      parameters:
        - name: videoName
          in: path
          required: true
          description: The name of the video
          schema:
            type: string
            example: "my-video"
        - name: category
          in: query
          required: true
          description: The category of the video
          schema:
            type: string
            example: "category-01"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PhaseUpdateRequest'
      responses:
        '200':
          description: Video work progress updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetVideoResponse'
        '400':
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /api/videos/{videoName}/definition:
    put:
      summary: Update video definition phase
      description: Updates video fields specific to the definition phase
      operationId: updateVideoDefinition
      tags:
        - Video Phases
      parameters:
        - name: videoName
          in: path
          required: true
          description: The name of the video
          schema:
            type: string
            example: "my-video"
        - name: category
          in: query
          required: true
          description: The category of the video
          schema:
            type: string
            example: "category-01"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PhaseUpdateRequest'
      responses:
        '200':
          description: Video definition updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetVideoResponse'
        '400':
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /api/videos/{videoName}/post-production:
    put:
      summary: Update video post-production phase
      description: Updates video fields specific to the post-production phase
      operationId: updateVideoPostProduction
      tags:
        - Video Phases
      parameters:
        - name: videoName
          in: path
          required: true
          description: The name of the video
          schema:
            type: string
            example: "my-video"
        - name: category
          in: query
          required: true
          description: The category of the video
          schema:
            type: string
            example: "category-01"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PhaseUpdateRequest'
      responses:
        '200':
          description: Video post-production updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetVideoResponse'
        '400':
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /api/videos/{videoName}/publishing:
    put:
      summary: Update video publishing phase
      description: Updates video fields specific to the publishing phase
      operationId: updateVideoPublishing
      tags:
        - Video Phases
      parameters:
        - name: videoName
          in: path
          required: true
          description: The name of the video
          schema:
            type: string
            example: "my-video"
        - name: category
          in: query
          required: true
          description: The category of the video
          schema:
            type: string
            example: "category-01"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PhaseUpdateRequest'
      responses:
        '200':
          description: Video publishing updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetVideoResponse'
        '400':
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /api/videos/{videoName}/post-publish:
    put:
      summary: Update video post-publish phase
      description: Updates video fields specific to the post-publish phase
      operationId: updateVideoPostPublish
      tags:
        - Video Phases
      parameters:
        - name: videoName
          in: path
          required: true
          description: The name of the video
          schema:
            type: string
            example: "my-video"
        - name: category
          in: query
          required: true
          description: The category of the video
          schema:
            type: string
            example: "category-01"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PhaseUpdateRequest'
      responses:
        '200':
          description: Video post-publish updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetVideoResponse'
        '400':
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /api/categories:
    get:
      summary: Get all categories
      description: Retrieves list of all available video categories
      operationId: getCategories
      tags:
        - Categories
      responses:
        '200':
          description: Categories retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CategoriesResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /api/editing/aspects:
    get:
      summary: Get editing aspects overview
      description: |
        Returns a lightweight overview of all available editing aspects without field details.
        This endpoint provides metadata about editing phases (initial-details, work-progress, 
        definition, post-production, publishing, post-publish) for UI navigation and overview.
        
        Each aspect includes:
        - Basic metadata (key, title, description)
        - UI configuration (icon, order, endpoint)
        - Field count for the aspect
        - Completion count (when video context is provided)
        
        **Progress Tracking**: When both `videoName` and `category` query parameters are provided,
        the response includes `completedFieldCount` showing how many fields have been filled
        for each aspect. This enables UI progress indicators like "6/8 fields completed".
        
        Performance: ~500 bytes response vs ~15KB for full field details (97% reduction).
      operationId: getEditingAspects
      tags:
        - Editing
      parameters:
        - name: videoName
          in: query
          required: false
          description: |
            Optional video name for progress tracking. When provided with category,
            enables completion count calculation for each aspect.
          schema:
            type: string
            example: "kubernetes-tutorial"
        - name: category
          in: query
          required: false
          description: |
            Optional video category for progress tracking. When provided with videoName,
            enables completion count calculation for each aspect.
          schema:
            type: string
            example: "tutorials"
      responses:
        '200':
          description: Editing aspects overview retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AspectOverviewResponse'
              examples:
                without_video_context:
                  summary: Basic overview without video context
                  description: Standard response when no video context is provided
                  value:
                    aspects:
                      - key: "initial-details"
                        title: "Initial Details"
                        description: "Basic video information and setup"
                        endpoint: "/api/videos/{videoName}/initial-details"
                        icon: "info"
                        order: 1
                        fieldCount: 8
                        completedFieldCount: 0
                      - key: "work-progress"
                        title: "Work Progress"
                        description: "Video creation and production tracking"
                        endpoint: "/api/videos/{videoName}/work-progress"
                        icon: "work"
                        order: 2
                        fieldCount: 11
                        completedFieldCount: 0
                with_video_context:
                  summary: Progress tracking with video context
                  description: Enhanced response showing actual completion counts when video context is provided
                  value:
                    aspects:
                      - key: "initial-details"
                        title: "Initial Details"
                        description: "Basic video information and setup"
                        endpoint: "/api/videos/{videoName}/initial-details"
                        icon: "info"
                        order: 1
                        fieldCount: 8
                        completedFieldCount: 6
                      - key: "work-progress"
                        title: "Work Progress"
                        description: "Video creation and production tracking"
                        endpoint: "/api/videos/{videoName}/work-progress"
                        icon: "work"
                        order: 2
                        fieldCount: 11
                        completedFieldCount: 8
        '400':
          description: Invalid query parameters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                missing_category:
                  summary: Missing category when videoName provided
                  value:
                    error: "When videoName is provided, category is also required"
                video_not_found:
                  summary: Specified video not found
                  value:
                    error: "Video not found"
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /api/editing/aspects/{aspectKey}/fields:
    get:
      summary: Get detailed field information for a specific aspect
      description: |
        Returns comprehensive field metadata for a specific editing aspect, including:
        
        - Field definitions with types and validation rules
        - UI rendering hints (input types, placeholders, help text)
        - Validation constraints (required, length limits, patterns)
        - Default values and options for select fields
        
        This endpoint is optimized for frontend forms and UI generation, providing
        all necessary metadata to render and validate editing interfaces.
      operationId: getAspectFields
      tags:
        - Editing
      parameters:
        - name: aspectKey
          in: path
          required: true
          description: |
            The unique key identifying the editing aspect. Must be one of:
            - initial-details
            - work-progress  
            - definition
            - post-production
            - publishing
            - post-publish
          schema:
            type: string
            enum: ["initial-details", "work-progress", "definition", "post-production", "publishing", "post-publish"]
            example: "work-progress"
      responses:
        '200':
          description: Aspect fields retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AspectFieldsResponse'
              example:
                aspectKey: "work-progress"
                aspectTitle: "Work Progress"
                fields:
                  - name: "Title"
                    type: "string"
                    required: true
                    order: 1
                    description: "The title of the video"
                    uiHints:
                      inputType: "text"
                      placeholder: "Enter video title"
                      helpText: "The main title that will appear on YouTube"
                      charLimit: 100
                      multiline: false
                    validationHints:
                      required: true
                      maxLength: 100
                    defaultValue: ""
                  - name: "Description"  
                    type: "text"
                    required: true
                    order: 2
                    description: "The description of the video"
                    uiHints:
                      inputType: "textarea"
                      placeholder: "Enter video description"
                      helpText: "Detailed description for YouTube"
                      rows: 5
                      charLimit: 5000
                      multiline: true
                    validationHints:
                      required: true
                      maxLength: 5000
                    defaultValue: ""
        '400':
          description: Invalid aspect key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                error: "aspect key is required"
        '404':
          description: Aspect not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                error: "aspect not found"
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

components:
  schemas:
    CreateVideoRequest:
      type: object
      required:
        - name
        - category
      properties:
        name:
          type: string
          description: The name of the video
          example: "my-awesome-video"
        category:
          type: string
          description: The category/directory for the video
          example: "category-01"

    CreateVideoResponse:
      type: object
      properties:
        video:
          $ref: '#/components/schemas/VideoIndex'

    VideoIndex:
      type: object
      properties:
        name:
          type: string
          description: The name of the video
          example: "my-awesome-video"
        category:
          type: string
          description: The category of the video
          example: "category-01"

    VideoPhasesResponse:
      type: object
      properties:
        phases:
          type: array
          items:
            $ref: '#/components/schemas/PhaseInfo'

    PhaseInfo:
      type: object
      properties:
        id:
          type: integer
          description: Phase ID (0-7)
          example: 7
        name:
          type: string
          description: Human-readable phase name
          example: "Ideas"
        count:
          type: integer
          description: Number of videos in this phase
          example: 5

    GetVideosResponse:
      type: object
      properties:
        videos:
          type: array
          items:
            $ref: '#/components/schemas/Video'

    GetVideoResponse:
      type: object
      properties:
        video:
          $ref: '#/components/schemas/Video'

    UpdateVideoRequest:
      type: object
      required:
        - video
      properties:
        video:
          $ref: '#/components/schemas/Video'

    MoveVideoRequest:
      type: object
      required:
        - target_directory_path
      properties:
        target_directory_path:
          type: string
          description: The target directory path to move the video to
          example: "manuscript/category-02"

    PhaseUpdateRequest:
      type: object
      description: Dynamic object containing phase-specific field updates
      additionalProperties: true
      example:
        title: "Updated Video Title"
        description: "Updated video description"
        date: "2025-05-27T10:00"

    CategoriesResponse:
      type: object
      properties:
        categories:
          type: array
          items:
            $ref: '#/components/schemas/CategoryInfo'

    CategoryInfo:
      type: object
      properties:
        name:
          type: string
          description: The name of the category
          example: "category-01"
        path:
          type: string
          description: The file system path of the category
          example: "manuscript/category-01"

    Video:
      type: object
      properties:
        name:
          type: string
          description: The name of the video
          example: "my-awesome-video"
        index:
          type: integer
          description: The index number of the video
          example: 1
        path:
          type: string
          description: The file system path to the video
          example: "manuscript/category-01/my-awesome-video.yaml"
        category:
          type: string
          description: The category of the video
          example: "category-01"
        init:
          $ref: '#/components/schemas/Tasks'
        work:
          $ref: '#/components/schemas/Tasks'
        define:
          $ref: '#/components/schemas/Tasks'
        edit:
          $ref: '#/components/schemas/Tasks'
        publish:
          $ref: '#/components/schemas/Tasks'
        postPublish:
          $ref: '#/components/schemas/Tasks'
        projectName:
          type: string
          description: The name of the project
          example: "My Project"
        projectURL:
          type: string
          description: The URL of the project
          example: "https://github.com/user/project"
        sponsorship:
          $ref: '#/components/schemas/Sponsorship'
        date:
          type: string
          description: The scheduled date for the video
          example: "2025-05-27T10:00"
        delayed:
          type: boolean
          description: Whether the video is delayed
          example: false
        screen:
          type: boolean
          description: Whether screen recording is needed
          example: true
        head:
          type: boolean
          description: Whether head recording is needed
          example: false
        thumbnails:
          type: boolean
          description: Whether thumbnails are needed
          example: true
        diagrams:
          type: boolean
          description: Whether diagrams are needed
          example: false
        title:
          type: string
          description: The title of the video
          example: "How to Build Awesome Software"
        description:
          type: string
          description: The description of the video
          example: "In this video, we'll explore..."
        highlight:
          type: string
          description: The highlight text for the video
        tags:
          type: string
          description: Tags for the video
          example: "programming,tutorial,beginner"
        descriptionTags:
          type: string
          description: Tags used in the description
        location:
          type: string
          description: The recording location
        tagline:
          type: string
          description: The tagline for the video
        taglineIdeas:
          type: string
          description: Ideas for taglines
        otherLogos:
          type: string
          description: Other logos to include
        screenshots:
          type: boolean
          description: Whether screenshots are needed
          example: false
        requestThumbnail:
          type: boolean
          description: Whether a thumbnail is requested
          example: false
        thumbnail:
          type: string
          description: The thumbnail image
        language:
          type: string
          description: The language of the video
          example: "en"
        members:
          type: string
          description: Team members involved
        animations:
          type: string
          description: Animations needed
        requestEdit:
          type: boolean
          description: Whether editing is requested
          example: false
        movie:
          type: boolean
          description: Whether this is a movie format
          example: false
        timecodes:
          type: string
          description: Video timecodes
        hugoPath:
          type: string
          description: Hugo site path
        relatedVideos:
          type: string
          description: Related videos
        uploadVideo:
          type: string
          description: Upload video path
        videoId:
          type: string
          description: YouTube video ID
        tweet:
          type: string
          description: Tweet content
        linkedInPosted:
          type: boolean
          description: Whether posted to LinkedIn
          example: false
        slackPosted:
          type: boolean
          description: Whether posted to Slack
          example: false
        hnPosted:
          type: boolean
          description: Whether posted to Hacker News
          example: false
        dotPosted:
          type: boolean
          description: Whether posted to DevOpsToolkit
          example: false
        blueSkyPosted:
          type: boolean
          description: Whether posted to BlueSky
          example: false
        youTubeHighlight:
          type: boolean
          description: Whether highlighted on YouTube
          example: false
        youTubeComment:
          type: boolean
          description: Whether commented on YouTube
          example: false
        youTubeCommentReply:
          type: boolean
          description: Whether replied to YouTube comments
          example: false
        slides:
          type: boolean
          description: Whether slides are needed
          example: false
        gde:
          type: boolean
          description: Whether this is a GDE video
          example: false
        repo:
          type: string
          description: Repository URL
        notifiedSponsors:
          type: boolean
          description: Whether sponsors have been notified
          example: false
        appliedLanguage:
          type: string
          description: Applied language setting
        appliedAudioLanguage:
          type: string
          description: Applied audio language setting
        audioLanguage:
          type: string
          description: Audio language
        gist:
          type: string
          description: Gist URL or content
        code:
          type: boolean
          description: Whether code is included
          example: false

    Tasks:
      type: object
      description: Task completion tracking for a video phase
      properties:
        completed:
          type: integer
          description: Number of completed tasks
          example: 3
        total:
          type: integer
          description: Total number of tasks
          example: 5

    Sponsorship:
      type: object
      description: Sponsorship information for the video
      properties:
        amount:
          type: string
          description: Sponsorship amount
          example: "$1000"
        emails:
          type: string
          description: Sponsor contact emails
          example: "sponsor@company.com"
        blocked:
          type: string
          description: Blocked sponsors
          example: "competitor-company"

    ErrorResponse:
      type: object
      properties:
        error:
          type: string
          description: Error message
          example: "Invalid request"
        message:
          type: string
          description: Detailed error message
          example: "The name parameter is required but was not provided"

    GetVideosListResponse:
      type: object
      properties:
        videos:
          type: array
          items:
            $ref: '#/components/schemas/VideoListItem'

    VideoListItem:
      type: object
      properties:
        name:
          type: string
          description: The name of the video
          example: "my-awesome-video"
        category:
          type: string
          description: The category of the video
          example: "category-01"
        date:
          type: string
          description: The scheduled date for the video
          example: "2025-05-27T10:00"
        title:
          type: string
          description: The title of the video
          example: "Top 10 DevOps Tools You MUST Use in 2025!"
        thumbnail:
          type: string
          description: The thumbnail image path
          example: "material/top-2025/thumbnail-01.jpg"
        status:
          type: string
          description: The current status of the video
          enum: ["published", "draft"]
          example: "published"
        phase:
          type: integer
          description: The workflow phase of the video (0-7)
          minimum: 0
          maximum: 7
          example: 0
        progress:
          type: object
          description: Video completion progress
          properties:
            completed:
              type: integer
              description: Number of completed publish tasks
              example: 10
            total:
              type: integer
              description: Total number of publish tasks
              example: 11
      required:
        - name
        - category
        - title
        - status
        - phase
        - progress
      description: |
        Lightweight video object optimized for list views. Contains only essential fields
        needed for video cards, resulting in ~200 bytes per video compared to ~8.8KB
        for full video objects (97.5% size reduction).
        
        The phase field indicates the current workflow stage:
        - Phase 0: Published
        - Phase 1: Publish Pending  
        - Phase 2: Edit Requested
        - Phase 3: Material Done
        - Phase 4: Started
        - Phase 5: Delayed
        - Phase 6: Sponsored Blocked
        - Phase 7: Ideas

    AspectOverviewResponse:
      type: object
      properties:
        aspects:
          type: array
          items:
            $ref: '#/components/schemas/AspectSummary'
      description: |
        Response containing a lightweight overview of all editing aspects.
        Optimized for navigation and overview purposes.

    AspectFieldsResponse:
      type: object
      properties:
        aspectKey:
          type: string
          description: The unique key of the aspect
          example: "work-progress"
        aspectTitle:
          type: string
          description: The human-readable title of the aspect
          example: "Work Progress"
        fields:
          type: array
          items:
            $ref: '#/components/schemas/AspectField'
      required:
        - aspectKey
        - aspectTitle
        - fields
      description: |
        Response containing detailed field information for a specific editing aspect.
        Includes all metadata needed for frontend form generation and validation.

    AspectSummary:
      type: object
      properties:
        key:
          type: string
          description: Unique identifier for the aspect
          example: "work-progress"
        title:
          type: string
          description: Human-readable title
          example: "Work Progress"
        description:
          type: string
          description: Brief description of the aspect's purpose
          example: "Video creation and production tracking"
        endpoint:
          type: string
          description: API endpoint for updating this aspect
          example: "/api/videos/{videoName}/work-progress"
        icon:
          type: string
          description: Icon identifier for UI display
          example: "work"
        order:
          type: integer
          description: Sort order for UI display
          example: 2
        fieldCount:
          type: integer
          description: Number of fields in this aspect
          example: 11
        completedFieldCount:
          type: integer
          description: |
            Number of completed fields in this aspect. When video context is not provided,
            this will be 0. When video context is provided via query parameters, this
            shows the actual count of completed fields based on the video's current state.
          example: 8
      required:
        - key
        - title
        - description
        - endpoint
        - icon
        - order
        - fieldCount
        - completedFieldCount
      description: |
        Summary information for an editing aspect. Includes field counts and completion
        tracking when video context is available.

    AspectField:
      type: object
      properties:
        name:
          type: string
          description: The field name/identifier
          example: "Title"
        type:
          type: string
          description: The field type for validation and UI rendering
          enum: ["string", "text", "boolean", "date", "select", "number"]
          example: "string"
        required:
          type: boolean
          description: Whether this field is required
          example: true
        order:
          type: integer
          description: Display order for the field
          example: 1
        description:
          type: string
          description: Human-readable description of the field
          example: "The title of the video"
        options:
          $ref: '#/components/schemas/FieldOptions'
        uiHints:
          $ref: '#/components/schemas/UIHints'
        validationHints:
          $ref: '#/components/schemas/ValidationHints'
        defaultValue:
          description: Default value for the field (type varies by field type)
          oneOf:
            - type: string
            - type: number
            - type: boolean
            - type: "null"
          example: ""
      required:
        - name
        - type
        - required
        - order
        - description

    FieldOptions:
      type: object
      properties:
        values:
          type: array
          items:
            type: string
          description: Available options for select-type fields
          example: ["draft", "review", "final"]
      description: Additional configuration for select-type fields

    UIHints:
      type: object
      properties:
        inputType:
          type: string
          description: HTML input type for rendering
          enum: ["text", "textarea", "checkbox", "select", "date", "number"]
          example: "text"
        placeholder:
          type: string
          description: Placeholder text for input fields
          example: "Enter video title"
        helpText:
          type: string
          description: Help text displayed near the field
          example: "The main title that will appear on YouTube"
        rows:
          type: integer
          description: Number of rows for textarea fields
          example: 3
        charLimit:
          type: integer
          description: Character limit for text fields
          example: 100
        multiline:
          type: boolean
          description: Whether the field supports multiple lines
          example: false
        options:
          type: array
          items:
            $ref: '#/components/schemas/SelectOption'
          description: Options for select fields
        attributes:
          type: object
          additionalProperties: true
          description: Additional HTML attributes for the input
      description: UI rendering hints for frontend applications

    ValidationHints:
      type: object
      properties:
        required:
          type: boolean
          description: Whether the field is required
          example: true
        minLength:
          type: integer
          description: Minimum length for text fields
          example: 1
        maxLength:
          type: integer
          description: Maximum length for text fields
          example: 100
        pattern:
          type: string
          description: Regular expression pattern for validation
          example: "^[a-zA-Z0-9\\s]+$"
        patternDesc:
          type: string
          description: Human-readable description of the pattern
          example: "Only letters, numbers, and spaces allowed"
        min:
          type: integer
          description: Minimum value for numeric fields
          example: 0
        max:
          type: integer
          description: Maximum value for numeric fields
          example: 100
      description: Validation rules for frontend form validation

    SelectOption:
      type: object
      properties:
        label:
          type: string
          description: Display label for the option
          example: "Draft"
        value:
          description: The actual value (type varies)
          oneOf:
            - type: string
            - type: number
            - type: boolean
          example: "draft"
      required:
        - label
        - value
      description: An option for select-type fields

tags:
  - name: Health
    description: Health check operations
  - name: Videos
    description: Video CRUD operations
  - name: Video Phases
    description: Phase-specific video updates
  - name: Categories
    description: Category management operations
  - name: Editing
    description: Video editing aspects metadata and field definitions