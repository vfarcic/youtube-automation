{"type":"entity","name":"YouTube Automation Tool","entityType":"Project","observations":["A Go-based command-line tool for automating YouTube video publishing workflow","Features include: YouTube video uploads with metadata, Hugo blog integration, Bluesky social media posting","Configuration via settings.yaml file and environment variables","Key files: main.go, cli.go, youtube.go, email.go, hugo.go, bluesky.go"]}
{"type":"entity","name":"Project Config","entityType":"Configuration","observations":["Uses settings.yaml with sections for email, AI, YouTube, Hugo, and Bluesky","Sensitive data can use environment variables: EMAIL_PASSWORD, AI_KEY, YOUTUBE_API_KEY, BLUESKY_PASSWORD","Required flags include email settings, AI settings (Azure OpenAI), YouTube API key, and Hugo path","Optional flags for Bluesky integration"]}
{"type":"entity","name":"Project Requirements","entityType":"Dependencies","observations":["Go 1.x","YouTube API credentials (client_secret.json)","Azure OpenAI API key","Email account for notifications","Optional: Hugo site repository","Optional: Bluesky account"]}
{"type":"entity","name":"Test-Driven Development","entityType":"Development Principle","observations":["Test-Driven Development (TDD) is a software development approach where tests are written before the code implementation.","TDD follows a red-green-refactor cycle: write a failing test, implement code to make it pass, then refactor while keeping tests passing.","Tests should be written for all new features and bug fixes before implementing the actual code.","The focus is on writing only the code necessary to pass the tests, avoiding over-engineering.","Benefits include better design, higher code quality, built-in regression testing, and clear specification of requirements.","When implementing new functionality for the YouTube Automation project, always start with writing tests first."]}
{"type":"entity","name":"Git Workflow Rule","entityType":"Process","observations":["When pushing changes to Git, add a list of completed Taskmaster tasks to the PR description","Mark tasks as 'done' in the PR description that have been completed in the current work","Always include task IDs and titles for clear tracking of completed work","This provides better visibility into what each PR accomplishes"]}
{"type":"relation","from":"YouTube Automation Tool","to":"Project Config","relationType":"uses"}
{"type":"relation","from":"YouTube Automation Tool","to":"Project Requirements","relationType":"requires"}
{"type":"relation","from":"Project","to":"YouTube Automation Tool","relationType":"is"}